
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000047e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  000004f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000524  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000064e  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005bb  00000000  00000000  00000bde  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000021f  00000000  00000000  00001199  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000013b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000345  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000032  00000000  00000000  00001741  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001773  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 4e 00 	call	0x9c	; 0x9c <main>
  74:	0c 94 3d 02 	jmp	0x47a	; 0x47a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <_Z8ADC_readh>:
int OCR;

unsigned int ADC_read(unsigned char chnl)
{
	chnl= chnl & 0b00000111;  // выбор канала АЦП от 0 до 7
	ADMUX = 0b01000100;       //выбран канал A0
  7c:	84 e4       	ldi	r24, 0x44	; 68
  7e:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(1<<ADSC);        // старт преобразования
  80:	86 b1       	in	r24, 0x06	; 6
  82:	80 64       	ori	r24, 0x40	; 64
  84:	86 b9       	out	0x06, r24	; 6
	while(!(ADCSRA & (1<<ADIF)));   // ждем окончания преобразования
  86:	34 9b       	sbis	0x06, 4	; 6
  88:	fe cf       	rjmp	.-4      	; 0x86 <_Z8ADC_readh+0xa>
	ADCSRA|=(1<<ADIF);        // очистим ADIF когда преобразование закончится
  8a:	86 b1       	in	r24, 0x06	; 6
  8c:	80 61       	ori	r24, 0x10	; 16
  8e:	86 b9       	out	0x06, r24	; 6
	return (ADC);             //возвращаем рассчитанное значение АЦП
  90:	84 b1       	in	r24, 0x04	; 4
  92:	95 b1       	in	r25, 0x05	; 5
}
  94:	08 95       	ret

00000096 <_Z3seti>:

void set(int ocr){
	OCR1AL = ocr;
  96:	8a bd       	out	0x2a, r24	; 42
	OCR1BL = ocr;
  98:	88 bd       	out	0x28, r24	; 40
  9a:	08 95       	ret

0000009c <main>:
}

int main(void)
{
	
	DDRA = 0b00000000;
  9c:	1a ba       	out	0x1a, r1	; 26
	DDRB = 0b11111111;         //устанавливаем на всех контактах PORTB логические "1"
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	87 bb       	out	0x17, r24	; 23
	DDRD = 0b11111111;         //устанавливаем на всех контактах PORTd логические "1"
  a2:	81 bb       	out	0x11, r24	; 17
	ADMUX=(1<<REFS0);          // выбор внутреннего опорного напряжения
  a4:	80 e4       	ldi	r24, 0x40	; 64
  a6:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADEN)|(0<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);     // разрешаем АЦП и устанавливаем коэффициент деления предделителя = 128
  a8:	83 e8       	ldi	r24, 0x83	; 131
  aa:	86 b9       	out	0x06, r24	; 6
	TCCR1A = 0b10100001; //ШИМ
  ac:	81 ea       	ldi	r24, 0xA1	; 161
  ae:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0b00001010;
  b0:	8a e0       	ldi	r24, 0x0A	; 10
  b2:	8e bd       	out	0x2e, r24	; 46
	ICR1H = 0x09;
  b4:	89 e0       	ldi	r24, 0x09	; 9
  b6:	87 bd       	out	0x27, r24	; 39
	ICR1L = 0xc3;
  b8:	83 ec       	ldi	r24, 0xC3	; 195
  ba:	86 bd       	out	0x26, r24	; 38

	OCR1AH = 0;
  bc:	1b bc       	out	0x2b, r1	; 43
	OCR1BH = 0;
  be:	19 bc       	out	0x29, r1	; 41
	
	while (1)
	{
		i = ADC_read(0);  // сохраняем рассчитанное значение АЦП в переменной i
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	0e 94 3e 00 	call	0x7c	; 0x7c <_Z8ADC_readh>
  c6:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <i+0x1>
  ca:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <i>
		OCR = (float)(((float)512/1024)*(float)i-256);
  ce:	bc 01       	movw	r22, r24
  d0:	99 0f       	add	r25, r25
  d2:	88 0b       	sbc	r24, r24
  d4:	99 0b       	sbc	r25, r25
  d6:	0e 94 44 01 	call	0x288	; 0x288 <__floatsisf>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	40 e0       	ldi	r20, 0x00	; 0
  e0:	5f e3       	ldi	r21, 0x3F	; 63
  e2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__mulsf3>
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	40 e8       	ldi	r20, 0x80	; 128
  ec:	53 e4       	ldi	r21, 0x43	; 67
  ee:	0e 94 9f 00 	call	0x13e	; 0x13e <__subsf3>
  f2:	0e 94 0c 01 	call	0x218	; 0x218 <__fixsfsi>
  f6:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  fa:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
		if (OCR < 0)
  fe:	77 23       	and	r23, r23
 100:	8c f4       	brge	.+34     	; 0x124 <main+0x88>
		{
			BitSet(PORTB,6);
 102:	88 b3       	in	r24, 0x18	; 24
 104:	80 64       	ori	r24, 0x40	; 64
 106:	88 bb       	out	0x18, r24	; 24
			BitClear(PORTB,7);
 108:	88 b3       	in	r24, 0x18	; 24
 10a:	8f 77       	andi	r24, 0x7F	; 127
 10c:	88 bb       	out	0x18, r24	; 24
			OCR = ~OCR;
 10e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 112:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 116:	80 95       	com	r24
 118:	90 95       	com	r25
 11a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 11e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 122:	06 c0       	rjmp	.+12     	; 0x130 <main+0x94>
		}
		else
		{
			BitSet(PORTB,7);
 124:	88 b3       	in	r24, 0x18	; 24
 126:	80 68       	ori	r24, 0x80	; 128
 128:	88 bb       	out	0x18, r24	; 24
			BitClear(PORTB,6);
 12a:	88 b3       	in	r24, 0x18	; 24
 12c:	8f 7b       	andi	r24, 0xBF	; 191
 12e:	88 bb       	out	0x18, r24	; 24
		}
		set(OCR);
 130:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 134:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 138:	0e 94 4b 00 	call	0x96	; 0x96 <_Z3seti>
	ICR1L = 0xc3;

	OCR1AH = 0;
	OCR1BH = 0;
	
	while (1)
 13c:	c1 cf       	rjmp	.-126    	; 0xc0 <main+0x24>

0000013e <__subsf3>:
 13e:	50 58       	subi	r21, 0x80	; 128

00000140 <__addsf3>:
 140:	bb 27       	eor	r27, r27
 142:	aa 27       	eor	r26, r26
 144:	0e 94 b7 00 	call	0x16e	; 0x16e <__addsf3x>
 148:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_round>
 14c:	0e 94 88 01 	call	0x310	; 0x310 <__fp_pscA>
 150:	38 f0       	brcs	.+14     	; 0x160 <__addsf3+0x20>
 152:	0e 94 8f 01 	call	0x31e	; 0x31e <__fp_pscB>
 156:	20 f0       	brcs	.+8      	; 0x160 <__addsf3+0x20>
 158:	39 f4       	brne	.+14     	; 0x168 <__addsf3+0x28>
 15a:	9f 3f       	cpi	r25, 0xFF	; 255
 15c:	19 f4       	brne	.+6      	; 0x164 <__addsf3+0x24>
 15e:	26 f4       	brtc	.+8      	; 0x168 <__addsf3+0x28>
 160:	0c 94 85 01 	jmp	0x30a	; 0x30a <__fp_nan>
 164:	0e f4       	brtc	.+2      	; 0x168 <__addsf3+0x28>
 166:	e0 95       	com	r30
 168:	e7 fb       	bst	r30, 7
 16a:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_inf>

0000016e <__addsf3x>:
 16e:	e9 2f       	mov	r30, r25
 170:	0e 94 a7 01 	call	0x34e	; 0x34e <__fp_split3>
 174:	58 f3       	brcs	.-42     	; 0x14c <__addsf3+0xc>
 176:	ba 17       	cp	r27, r26
 178:	62 07       	cpc	r22, r18
 17a:	73 07       	cpc	r23, r19
 17c:	84 07       	cpc	r24, r20
 17e:	95 07       	cpc	r25, r21
 180:	20 f0       	brcs	.+8      	; 0x18a <__addsf3x+0x1c>
 182:	79 f4       	brne	.+30     	; 0x1a2 <__addsf3x+0x34>
 184:	a6 f5       	brtc	.+104    	; 0x1ee <__addsf3x+0x80>
 186:	0c 94 c9 01 	jmp	0x392	; 0x392 <__fp_zero>
 18a:	0e f4       	brtc	.+2      	; 0x18e <__addsf3x+0x20>
 18c:	e0 95       	com	r30
 18e:	0b 2e       	mov	r0, r27
 190:	ba 2f       	mov	r27, r26
 192:	a0 2d       	mov	r26, r0
 194:	0b 01       	movw	r0, r22
 196:	b9 01       	movw	r22, r18
 198:	90 01       	movw	r18, r0
 19a:	0c 01       	movw	r0, r24
 19c:	ca 01       	movw	r24, r20
 19e:	a0 01       	movw	r20, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	ff 27       	eor	r31, r31
 1a4:	59 1b       	sub	r21, r25
 1a6:	99 f0       	breq	.+38     	; 0x1ce <__addsf3x+0x60>
 1a8:	59 3f       	cpi	r21, 0xF9	; 249
 1aa:	50 f4       	brcc	.+20     	; 0x1c0 <__addsf3x+0x52>
 1ac:	50 3e       	cpi	r21, 0xE0	; 224
 1ae:	68 f1       	brcs	.+90     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1b0:	1a 16       	cp	r1, r26
 1b2:	f0 40       	sbci	r31, 0x00	; 0
 1b4:	a2 2f       	mov	r26, r18
 1b6:	23 2f       	mov	r18, r19
 1b8:	34 2f       	mov	r19, r20
 1ba:	44 27       	eor	r20, r20
 1bc:	58 5f       	subi	r21, 0xF8	; 248
 1be:	f3 cf       	rjmp	.-26     	; 0x1a6 <__addsf3x+0x38>
 1c0:	46 95       	lsr	r20
 1c2:	37 95       	ror	r19
 1c4:	27 95       	ror	r18
 1c6:	a7 95       	ror	r26
 1c8:	f0 40       	sbci	r31, 0x00	; 0
 1ca:	53 95       	inc	r21
 1cc:	c9 f7       	brne	.-14     	; 0x1c0 <__addsf3x+0x52>
 1ce:	7e f4       	brtc	.+30     	; 0x1ee <__addsf3x+0x80>
 1d0:	1f 16       	cp	r1, r31
 1d2:	ba 0b       	sbc	r27, r26
 1d4:	62 0b       	sbc	r22, r18
 1d6:	73 0b       	sbc	r23, r19
 1d8:	84 0b       	sbc	r24, r20
 1da:	ba f0       	brmi	.+46     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1dc:	91 50       	subi	r25, 0x01	; 1
 1de:	a1 f0       	breq	.+40     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 1e0:	ff 0f       	add	r31, r31
 1e2:	bb 1f       	adc	r27, r27
 1e4:	66 1f       	adc	r22, r22
 1e6:	77 1f       	adc	r23, r23
 1e8:	88 1f       	adc	r24, r24
 1ea:	c2 f7       	brpl	.-16     	; 0x1dc <__addsf3x+0x6e>
 1ec:	0e c0       	rjmp	.+28     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1ee:	ba 0f       	add	r27, r26
 1f0:	62 1f       	adc	r22, r18
 1f2:	73 1f       	adc	r23, r19
 1f4:	84 1f       	adc	r24, r20
 1f6:	48 f4       	brcc	.+18     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1f8:	87 95       	ror	r24
 1fa:	77 95       	ror	r23
 1fc:	67 95       	ror	r22
 1fe:	b7 95       	ror	r27
 200:	f7 95       	ror	r31
 202:	9e 3f       	cpi	r25, 0xFE	; 254
 204:	08 f0       	brcs	.+2      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 206:	b0 cf       	rjmp	.-160    	; 0x168 <__addsf3+0x28>
 208:	93 95       	inc	r25
 20a:	88 0f       	add	r24, r24
 20c:	08 f0       	brcs	.+2      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
 20e:	99 27       	eor	r25, r25
 210:	ee 0f       	add	r30, r30
 212:	97 95       	ror	r25
 214:	87 95       	ror	r24
 216:	08 95       	ret

00000218 <__fixsfsi>:
 218:	0e 94 13 01 	call	0x226	; 0x226 <__fixunssfsi>
 21c:	68 94       	set
 21e:	b1 11       	cpse	r27, r1
 220:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_szero>
 224:	08 95       	ret

00000226 <__fixunssfsi>:
 226:	0e 94 af 01 	call	0x35e	; 0x35e <__fp_splitA>
 22a:	88 f0       	brcs	.+34     	; 0x24e <__fixunssfsi+0x28>
 22c:	9f 57       	subi	r25, 0x7F	; 127
 22e:	98 f0       	brcs	.+38     	; 0x256 <__fixunssfsi+0x30>
 230:	b9 2f       	mov	r27, r25
 232:	99 27       	eor	r25, r25
 234:	b7 51       	subi	r27, 0x17	; 23
 236:	b0 f0       	brcs	.+44     	; 0x264 <__fixunssfsi+0x3e>
 238:	e1 f0       	breq	.+56     	; 0x272 <__fixunssfsi+0x4c>
 23a:	66 0f       	add	r22, r22
 23c:	77 1f       	adc	r23, r23
 23e:	88 1f       	adc	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	1a f0       	brmi	.+6      	; 0x24a <__fixunssfsi+0x24>
 244:	ba 95       	dec	r27
 246:	c9 f7       	brne	.-14     	; 0x23a <__fixunssfsi+0x14>
 248:	14 c0       	rjmp	.+40     	; 0x272 <__fixunssfsi+0x4c>
 24a:	b1 30       	cpi	r27, 0x01	; 1
 24c:	91 f0       	breq	.+36     	; 0x272 <__fixunssfsi+0x4c>
 24e:	0e 94 c9 01 	call	0x392	; 0x392 <__fp_zero>
 252:	b1 e0       	ldi	r27, 0x01	; 1
 254:	08 95       	ret
 256:	0c 94 c9 01 	jmp	0x392	; 0x392 <__fp_zero>
 25a:	67 2f       	mov	r22, r23
 25c:	78 2f       	mov	r23, r24
 25e:	88 27       	eor	r24, r24
 260:	b8 5f       	subi	r27, 0xF8	; 248
 262:	39 f0       	breq	.+14     	; 0x272 <__fixunssfsi+0x4c>
 264:	b9 3f       	cpi	r27, 0xF9	; 249
 266:	cc f3       	brlt	.-14     	; 0x25a <__fixunssfsi+0x34>
 268:	86 95       	lsr	r24
 26a:	77 95       	ror	r23
 26c:	67 95       	ror	r22
 26e:	b3 95       	inc	r27
 270:	d9 f7       	brne	.-10     	; 0x268 <__fixunssfsi+0x42>
 272:	3e f4       	brtc	.+14     	; 0x282 <__fixunssfsi+0x5c>
 274:	90 95       	com	r25
 276:	80 95       	com	r24
 278:	70 95       	com	r23
 27a:	61 95       	neg	r22
 27c:	7f 4f       	sbci	r23, 0xFF	; 255
 27e:	8f 4f       	sbci	r24, 0xFF	; 255
 280:	9f 4f       	sbci	r25, 0xFF	; 255
 282:	08 95       	ret

00000284 <__floatunsisf>:
 284:	e8 94       	clt
 286:	09 c0       	rjmp	.+18     	; 0x29a <__floatsisf+0x12>

00000288 <__floatsisf>:
 288:	97 fb       	bst	r25, 7
 28a:	3e f4       	brtc	.+14     	; 0x29a <__floatsisf+0x12>
 28c:	90 95       	com	r25
 28e:	80 95       	com	r24
 290:	70 95       	com	r23
 292:	61 95       	neg	r22
 294:	7f 4f       	sbci	r23, 0xFF	; 255
 296:	8f 4f       	sbci	r24, 0xFF	; 255
 298:	9f 4f       	sbci	r25, 0xFF	; 255
 29a:	99 23       	and	r25, r25
 29c:	a9 f0       	breq	.+42     	; 0x2c8 <__floatsisf+0x40>
 29e:	f9 2f       	mov	r31, r25
 2a0:	96 e9       	ldi	r25, 0x96	; 150
 2a2:	bb 27       	eor	r27, r27
 2a4:	93 95       	inc	r25
 2a6:	f6 95       	lsr	r31
 2a8:	87 95       	ror	r24
 2aa:	77 95       	ror	r23
 2ac:	67 95       	ror	r22
 2ae:	b7 95       	ror	r27
 2b0:	f1 11       	cpse	r31, r1
 2b2:	f8 cf       	rjmp	.-16     	; 0x2a4 <__floatsisf+0x1c>
 2b4:	fa f4       	brpl	.+62     	; 0x2f4 <__floatsisf+0x6c>
 2b6:	bb 0f       	add	r27, r27
 2b8:	11 f4       	brne	.+4      	; 0x2be <__floatsisf+0x36>
 2ba:	60 ff       	sbrs	r22, 0
 2bc:	1b c0       	rjmp	.+54     	; 0x2f4 <__floatsisf+0x6c>
 2be:	6f 5f       	subi	r22, 0xFF	; 255
 2c0:	7f 4f       	sbci	r23, 0xFF	; 255
 2c2:	8f 4f       	sbci	r24, 0xFF	; 255
 2c4:	9f 4f       	sbci	r25, 0xFF	; 255
 2c6:	16 c0       	rjmp	.+44     	; 0x2f4 <__floatsisf+0x6c>
 2c8:	88 23       	and	r24, r24
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <__floatsisf+0x48>
 2cc:	96 e9       	ldi	r25, 0x96	; 150
 2ce:	11 c0       	rjmp	.+34     	; 0x2f2 <__floatsisf+0x6a>
 2d0:	77 23       	and	r23, r23
 2d2:	21 f0       	breq	.+8      	; 0x2dc <__floatsisf+0x54>
 2d4:	9e e8       	ldi	r25, 0x8E	; 142
 2d6:	87 2f       	mov	r24, r23
 2d8:	76 2f       	mov	r23, r22
 2da:	05 c0       	rjmp	.+10     	; 0x2e6 <__floatsisf+0x5e>
 2dc:	66 23       	and	r22, r22
 2de:	71 f0       	breq	.+28     	; 0x2fc <__floatsisf+0x74>
 2e0:	96 e8       	ldi	r25, 0x86	; 134
 2e2:	86 2f       	mov	r24, r22
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	60 e0       	ldi	r22, 0x00	; 0
 2e8:	2a f0       	brmi	.+10     	; 0x2f4 <__floatsisf+0x6c>
 2ea:	9a 95       	dec	r25
 2ec:	66 0f       	add	r22, r22
 2ee:	77 1f       	adc	r23, r23
 2f0:	88 1f       	adc	r24, r24
 2f2:	da f7       	brpl	.-10     	; 0x2ea <__floatsisf+0x62>
 2f4:	88 0f       	add	r24, r24
 2f6:	96 95       	lsr	r25
 2f8:	87 95       	ror	r24
 2fa:	97 f9       	bld	r25, 7
 2fc:	08 95       	ret

000002fe <__fp_inf>:
 2fe:	97 f9       	bld	r25, 7
 300:	9f 67       	ori	r25, 0x7F	; 127
 302:	80 e8       	ldi	r24, 0x80	; 128
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	08 95       	ret

0000030a <__fp_nan>:
 30a:	9f ef       	ldi	r25, 0xFF	; 255
 30c:	80 ec       	ldi	r24, 0xC0	; 192
 30e:	08 95       	ret

00000310 <__fp_pscA>:
 310:	00 24       	eor	r0, r0
 312:	0a 94       	dec	r0
 314:	16 16       	cp	r1, r22
 316:	17 06       	cpc	r1, r23
 318:	18 06       	cpc	r1, r24
 31a:	09 06       	cpc	r0, r25
 31c:	08 95       	ret

0000031e <__fp_pscB>:
 31e:	00 24       	eor	r0, r0
 320:	0a 94       	dec	r0
 322:	12 16       	cp	r1, r18
 324:	13 06       	cpc	r1, r19
 326:	14 06       	cpc	r1, r20
 328:	05 06       	cpc	r0, r21
 32a:	08 95       	ret

0000032c <__fp_round>:
 32c:	09 2e       	mov	r0, r25
 32e:	03 94       	inc	r0
 330:	00 0c       	add	r0, r0
 332:	11 f4       	brne	.+4      	; 0x338 <__fp_round+0xc>
 334:	88 23       	and	r24, r24
 336:	52 f0       	brmi	.+20     	; 0x34c <__fp_round+0x20>
 338:	bb 0f       	add	r27, r27
 33a:	40 f4       	brcc	.+16     	; 0x34c <__fp_round+0x20>
 33c:	bf 2b       	or	r27, r31
 33e:	11 f4       	brne	.+4      	; 0x344 <__fp_round+0x18>
 340:	60 ff       	sbrs	r22, 0
 342:	04 c0       	rjmp	.+8      	; 0x34c <__fp_round+0x20>
 344:	6f 5f       	subi	r22, 0xFF	; 255
 346:	7f 4f       	sbci	r23, 0xFF	; 255
 348:	8f 4f       	sbci	r24, 0xFF	; 255
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	08 95       	ret

0000034e <__fp_split3>:
 34e:	57 fd       	sbrc	r21, 7
 350:	90 58       	subi	r25, 0x80	; 128
 352:	44 0f       	add	r20, r20
 354:	55 1f       	adc	r21, r21
 356:	59 f0       	breq	.+22     	; 0x36e <__fp_splitA+0x10>
 358:	5f 3f       	cpi	r21, 0xFF	; 255
 35a:	71 f0       	breq	.+28     	; 0x378 <__fp_splitA+0x1a>
 35c:	47 95       	ror	r20

0000035e <__fp_splitA>:
 35e:	88 0f       	add	r24, r24
 360:	97 fb       	bst	r25, 7
 362:	99 1f       	adc	r25, r25
 364:	61 f0       	breq	.+24     	; 0x37e <__fp_splitA+0x20>
 366:	9f 3f       	cpi	r25, 0xFF	; 255
 368:	79 f0       	breq	.+30     	; 0x388 <__fp_splitA+0x2a>
 36a:	87 95       	ror	r24
 36c:	08 95       	ret
 36e:	12 16       	cp	r1, r18
 370:	13 06       	cpc	r1, r19
 372:	14 06       	cpc	r1, r20
 374:	55 1f       	adc	r21, r21
 376:	f2 cf       	rjmp	.-28     	; 0x35c <__fp_split3+0xe>
 378:	46 95       	lsr	r20
 37a:	f1 df       	rcall	.-30     	; 0x35e <__fp_splitA>
 37c:	08 c0       	rjmp	.+16     	; 0x38e <__fp_splitA+0x30>
 37e:	16 16       	cp	r1, r22
 380:	17 06       	cpc	r1, r23
 382:	18 06       	cpc	r1, r24
 384:	99 1f       	adc	r25, r25
 386:	f1 cf       	rjmp	.-30     	; 0x36a <__fp_splitA+0xc>
 388:	86 95       	lsr	r24
 38a:	71 05       	cpc	r23, r1
 38c:	61 05       	cpc	r22, r1
 38e:	08 94       	sec
 390:	08 95       	ret

00000392 <__fp_zero>:
 392:	e8 94       	clt

00000394 <__fp_szero>:
 394:	bb 27       	eor	r27, r27
 396:	66 27       	eor	r22, r22
 398:	77 27       	eor	r23, r23
 39a:	cb 01       	movw	r24, r22
 39c:	97 f9       	bld	r25, 7
 39e:	08 95       	ret

000003a0 <__mulsf3>:
 3a0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__mulsf3x>
 3a4:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_round>
 3a8:	0e 94 88 01 	call	0x310	; 0x310 <__fp_pscA>
 3ac:	38 f0       	brcs	.+14     	; 0x3bc <__mulsf3+0x1c>
 3ae:	0e 94 8f 01 	call	0x31e	; 0x31e <__fp_pscB>
 3b2:	20 f0       	brcs	.+8      	; 0x3bc <__mulsf3+0x1c>
 3b4:	95 23       	and	r25, r21
 3b6:	11 f0       	breq	.+4      	; 0x3bc <__mulsf3+0x1c>
 3b8:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_inf>
 3bc:	0c 94 85 01 	jmp	0x30a	; 0x30a <__fp_nan>
 3c0:	11 24       	eor	r1, r1
 3c2:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_szero>

000003c6 <__mulsf3x>:
 3c6:	0e 94 a7 01 	call	0x34e	; 0x34e <__fp_split3>
 3ca:	70 f3       	brcs	.-36     	; 0x3a8 <__mulsf3+0x8>

000003cc <__mulsf3_pse>:
 3cc:	95 9f       	mul	r25, r21
 3ce:	c1 f3       	breq	.-16     	; 0x3c0 <__mulsf3+0x20>
 3d0:	95 0f       	add	r25, r21
 3d2:	50 e0       	ldi	r21, 0x00	; 0
 3d4:	55 1f       	adc	r21, r21
 3d6:	62 9f       	mul	r22, r18
 3d8:	f0 01       	movw	r30, r0
 3da:	72 9f       	mul	r23, r18
 3dc:	bb 27       	eor	r27, r27
 3de:	f0 0d       	add	r31, r0
 3e0:	b1 1d       	adc	r27, r1
 3e2:	63 9f       	mul	r22, r19
 3e4:	aa 27       	eor	r26, r26
 3e6:	f0 0d       	add	r31, r0
 3e8:	b1 1d       	adc	r27, r1
 3ea:	aa 1f       	adc	r26, r26
 3ec:	64 9f       	mul	r22, r20
 3ee:	66 27       	eor	r22, r22
 3f0:	b0 0d       	add	r27, r0
 3f2:	a1 1d       	adc	r26, r1
 3f4:	66 1f       	adc	r22, r22
 3f6:	82 9f       	mul	r24, r18
 3f8:	22 27       	eor	r18, r18
 3fa:	b0 0d       	add	r27, r0
 3fc:	a1 1d       	adc	r26, r1
 3fe:	62 1f       	adc	r22, r18
 400:	73 9f       	mul	r23, r19
 402:	b0 0d       	add	r27, r0
 404:	a1 1d       	adc	r26, r1
 406:	62 1f       	adc	r22, r18
 408:	83 9f       	mul	r24, r19
 40a:	a0 0d       	add	r26, r0
 40c:	61 1d       	adc	r22, r1
 40e:	22 1f       	adc	r18, r18
 410:	74 9f       	mul	r23, r20
 412:	33 27       	eor	r19, r19
 414:	a0 0d       	add	r26, r0
 416:	61 1d       	adc	r22, r1
 418:	23 1f       	adc	r18, r19
 41a:	84 9f       	mul	r24, r20
 41c:	60 0d       	add	r22, r0
 41e:	21 1d       	adc	r18, r1
 420:	82 2f       	mov	r24, r18
 422:	76 2f       	mov	r23, r22
 424:	6a 2f       	mov	r22, r26
 426:	11 24       	eor	r1, r1
 428:	9f 57       	subi	r25, 0x7F	; 127
 42a:	50 40       	sbci	r21, 0x00	; 0
 42c:	9a f0       	brmi	.+38     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 42e:	f1 f0       	breq	.+60     	; 0x46c <__stack+0xd>
 430:	88 23       	and	r24, r24
 432:	4a f0       	brmi	.+18     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 434:	ee 0f       	add	r30, r30
 436:	ff 1f       	adc	r31, r31
 438:	bb 1f       	adc	r27, r27
 43a:	66 1f       	adc	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	88 1f       	adc	r24, r24
 440:	91 50       	subi	r25, 0x01	; 1
 442:	50 40       	sbci	r21, 0x00	; 0
 444:	a9 f7       	brne	.-22     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
 446:	9e 3f       	cpi	r25, 0xFE	; 254
 448:	51 05       	cpc	r21, r1
 44a:	80 f0       	brcs	.+32     	; 0x46c <__stack+0xd>
 44c:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_inf>
 450:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_szero>
 454:	5f 3f       	cpi	r21, 0xFF	; 255
 456:	e4 f3       	brlt	.-8      	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 458:	98 3e       	cpi	r25, 0xE8	; 232
 45a:	d4 f3       	brlt	.-12     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 45c:	86 95       	lsr	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b7 95       	ror	r27
 464:	f7 95       	ror	r31
 466:	e7 95       	ror	r30
 468:	9f 5f       	subi	r25, 0xFF	; 255
 46a:	c1 f7       	brne	.-16     	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
 46c:	fe 2b       	or	r31, r30
 46e:	88 0f       	add	r24, r24
 470:	91 1d       	adc	r25, r1
 472:	96 95       	lsr	r25
 474:	87 95       	ror	r24
 476:	97 f9       	bld	r25, 7
 478:	08 95       	ret

0000047a <_exit>:
 47a:	f8 94       	cli

0000047c <__stop_program>:
 47c:	ff cf       	rjmp	.-2      	; 0x47c <__stop_program>
